[{"detection_result": {"detection_name": "Add DefaultUser And Password In Registry", "detection_file": "add_defaultuser_and_password_in_registry.yml", "splunk_search": "| tstats `security_content_summariesonly` count from datamodel=Endpoint.Registry where Registry.registry_path= \"*SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon*\" AND Registry.registry_value_name= DefaultPassword OR Registry.registry_value_name= DefaultUserName by _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_value_name Registry.process_guid Registry.registry_value_data Registry.registry_key_name | `drop_dm_object_name(Registry)` |rename process_guid as proc_guid |join proc_guid, _time [| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes by _time span=1h Processes.process_id Processes.process_name Processes.process Processes.dest Processes.parent_process_name Processes.parent_process Processes.process_guid | `drop_dm_object_name(Processes)` |rename process_guid as proc_guid | fields _time dest user parent_process_name parent_process process_name process_path process proc_guid registry_path registry_value_name registry_value_data registry_key_name] | table _time dest user parent_process_name parent_process process_name process_path process proc_guid registry_path registry_value_name registry_value_data registry_key_name | `add_defaultuser_and_password_in_registry_filter` | stats count | where count > 0", "diskUsage": "663552", "runDuration": "2.926", "scanCount": "5", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Allow Network Discovery In Firewall", "detection_file": "allow_network_discovery_in_firewall.yml", "splunk_search": "| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_netsh` Processes.process= \"*firewall*\" Processes.process= \"*group=\\\"Network Discovery\\\"*\"  Processes.process=\"*enable*\" Processes.process=\"*Yes*\" by Processes.dest Processes.user Processes.parent_process Processes.original_file_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.parent_process_name | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `allow_network_discovery_in_firewall_filter` | stats count | where count > 0", "diskUsage": "290816", "runDuration": "1.4040000000000001", "scanCount": "2821", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Anomalous usage of 7zip", "detection_file": "anomalous_usage_of_7zip.yml", "splunk_search": "| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name IN (\"rundll32.exe\", \"dllhost.exe\") Processes.process_name=*7z* by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`| `anomalous_usage_of_7zip_filter` | stats count | where count > 0", "diskUsage": "274432", "runDuration": "1.256", "scanCount": "2859", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Bcdedit Command Back To Normal Mode Boot", "detection_file": "bcdedit_command_back_to_normal_mode_boot.yml", "splunk_search": "| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = bcdedit.exe Processes.process=\"*/deletevalue*\" Processes.process=\"*{current}*\"  Processes.process=\"*safeboot*\" by Processes.process_name Processes.process Processes.parent_process_name Processes.dest Processes.user |`drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `bcdedit_command_back_to_normal_mode_boot_filter` | stats count | where count > 0", "diskUsage": "253952", "runDuration": "1.34", "scanCount": "2821", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Clear Unallocated Sector Using Cipher App", "detection_file": "clear_unallocated_sector_using_cipher_app.yml", "splunk_search": "| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = \"cipher.exe\" Processes.process = \"*/w:*\" by Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.dest Processes.user Processes.process_id Processes.process_guid | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `clear_unallocated_sector_using_cipher_app_filter` | stats count | where count > 0", "diskUsage": "253952", "runDuration": "1.294", "scanCount": "2836", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Common Ransomware Extensions", "detection_file": "common_ransomware_extensions.yml", "splunk_search": "| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime values(Filesystem.user) as user values(Filesystem.dest) as dest values(Filesystem.file_path) as file_path dc(Filesystem.file_path) as unique_path_count from datamodel=Endpoint.Filesystem by Filesystem.file_name | `drop_dm_object_name(Filesystem)` | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)`| rex field=file_name \"(?<file_extension>\\.[^\\.]+)$\" | `ransomware_extensions` | where unique_path_count > 15 | `common_ransomware_extensions_filter` | stats count | where count > 0", "diskUsage": "237568", "runDuration": "1.236", "scanCount": "29406", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Deleting Shadow Copies", "detection_file": "deleting_shadow_copies.yml", "splunk_search": "| tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=vssadmin.exe OR Processes.process_name=wmic.exe) Processes.process=*delete* Processes.process=*shadow* by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `deleting_shadow_copies_filter` | stats count | where count > 0", "diskUsage": "294912", "runDuration": "1.355", "scanCount": "2861", "resultCount": "1", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Detect Credential Dumping through LSASS access", "detection_file": "detect_credential_dumping_through_lsass_access.yml", "splunk_search": "search `sysmon` EventCode=10 TargetImage=*lsass.exe (GrantedAccess=0x1010 OR GrantedAccess=0x1410 OR GrantedAccess=0x1fffff OR GrantedAccess=0x143a OR GrantedAccess=0x40) | stats count min(_time) as firstTime max(_time) as lastTime by Computer, SourceImage, SourceProcessId, TargetImage, TargetProcessId, EventCode, GrantedAccess | rename Computer as dest | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | search NOT SourceImage IN (\"C:\\\\Windows\\\\system32\\\\csrss.exe\", \"C:\\\\Windows\\\\system32\\\\wininit.exe\") | stats count | where count > 0", "diskUsage": "114688", "runDuration": "0.23700000000000002", "scanCount": "245", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Detect RClone Command-Line Usage", "detection_file": "detect_rclone_command_line_usage.yml", "splunk_search": "| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_rclone` Processes.process IN (\"*copy*\", \"*mega*\", \"*pcloud*\", \"*ftp*\", \"*--config*\", \"*--progress*\", \"*--no-check-certificate*\", \"*--ignore-existing*\", \"*--auto-confirm*\", \"*--transfers*\", \"*--multi-thread-streams*\")  by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` |  `security_content_ctime(lastTime)` | `detect_rclone_command_line_usage_filter` | stats count | where count > 0", "diskUsage": "303104", "runDuration": "1.589", "scanCount": "2859", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Detect SharpHound Usage", "detection_file": "detect_sharphound_usage.yml", "splunk_search": "| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process_name=sharphound.exe OR Processes.original_file_name=SharpHound.exe) by Processes.dest Processes.user Processes.parent_process_name Processes.original_file_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `detect_sharphound_usage_filter` | stats count | where count > 0", "diskUsage": "274432", "runDuration": "1.2510000000000001", "scanCount": "2859", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Disable Logs Using WevtUtil", "detection_file": "disable_logs_using_wevtutil.yml", "splunk_search": "| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = \"wevtutil.exe\" Processes.process = \"*sl*\" Processes.process = \"*/e:false*\" by Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.dest Processes.user Processes.process_id Processes.process_guid | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `disable_logs_using_wevtutil_filter` | stats count | where count > 0", "diskUsage": "282624", "runDuration": "1.304", "scanCount": "2821", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Disable Windows Behaviour Monitoring", "detection_file": "disable_windows_behavior_monitoring.yml", "splunk_search": "| tstats `security_content_summariesonly` count from datamodel=Endpoint.Registry where Registry.registry_path= \"*\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows Defender\\\\Real-Time Protection\\\\DisableBehaviorMonitoring\" OR Registry.registry_path= \"*\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows Defender\\\\Real-Time Protection\\\\DisableOnAccessProtection\" OR Registry.registry_path= \"*\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows Defender\\\\Real-Time Protection\\\\DisableScanOnRealtimeEnable\" OR Registry.registry_path= \"*\\\\SOFTWARE\\\\Microsoft\\\\Windows Defender\\\\Real-Time Protection\\\\DisableRealtimeMonitoring\" OR Registry.registry_path= \"*\\\\Real-Time Protection\\\\DisableIntrusionPreventionSystem\" OR Registry.registry_path= \"*\\\\Real-Time Protection\\\\DisableIOAVProtection\" OR Registry.registry_path= \"*\\\\Real-Time Protection\\\\DisableScriptScanning\" AND Registry.registry_value_data = \"0x00000001\" by _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_value_name Registry.registry_value_data Registry.process_guid | `drop_dm_object_name(Registry)` |rename process_guid as proc_guid |join proc_guid, _time [| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes by _time span=1h Processes.process_id Processes.process_name Processes.process Processes.dest Processes.parent_process_name Processes.parent_process Processes.process_guid | `drop_dm_object_name(Processes)` |rename process_guid as proc_guid | fields _time dest user parent_process_name parent_process process_name process_path process proc_guid registry_path registry_value_name registry_value_data] | table _time dest user parent_process_name parent_process process_name process_path process proc_guid registry_path registry_value_name registry_value_data | `disable_windows_behavior_monitoring_filter` | stats count | where count > 0", "diskUsage": "720896", "runDuration": "2.634", "scanCount": "1", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Excessive Service Stop Attempt", "detection_file": "excessive_service_stop_attempt.yml", "splunk_search": "| tstats `security_content_summariesonly` values(Processes.process) as process values(Processes.process_id) as process_id count min(_time) as firstTime max(_time) as lastTime  from datamodel=Endpoint.Processes where `process_net` OR  Processes.process_name =\"sc.exe\" OR  Processes.original_file_name=\"sc.exe.mui\" AND Processes.process=\"*stop*\" OR Processes.process=\"*delete*\" by Processes.process_name Processes.original_file_name Processes.parent_process_name Processes.dest Processes.user _time span=1m | where count >=5 | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `excessive_service_stop_attempt_filter` | stats count | where count > 0", "diskUsage": "315392", "runDuration": "1.333", "scanCount": "3151", "resultCount": "1", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Execute Javascript With Jscript COM CLSID", "detection_file": "execute_javascript_with_jscript_com_clsid.yml", "splunk_search": "| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name = \"cscript.exe\" Processes.process=\"*-e:{F414C262-6AC0-11CF-B6D1-00AA00BBBB58}*\" by Processes.parent_process_name Processes.process_name Processes.process Processes.parent_process Processes.process_id Processes.dest Processes.user | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `execute_javascript_with_jscript_com_clsid_filter` | stats count | where count > 0", "diskUsage": "278528", "runDuration": "1.296", "scanCount": "2821", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Fsutil Zeroing File", "detection_file": "fsutil_zeroing_file.yml", "splunk_search": "| tstats `security_content_summariesonly` count values(Processes.process) as process values(Processes.parent_process) as parent_process min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=fsutil.exe Processes.process=\"*setzerodata*\" by Processes.user Processes.process_name Processes.parent_process_name Processes.dest  Processes.process Processes.parent_process | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `fsutil_zeroing_file_filter` | stats count | where count > 0", "diskUsage": "278528", "runDuration": "1.299", "scanCount": "2859", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "High Process Termination Frequency", "detection_file": "high_process_termination_frequency.yml", "splunk_search": "search `sysmon` EventCode=5 |bin _time span=3s |stats values(Image) as proc_terminated min(_time) as firstTime max(_time) as lastTime  count by Computer EventCode ProcessID | where count >= 15 | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)` | `high_process_termination_frequency_filter` | stats count | where count > 0", "diskUsage": "106496", "runDuration": "5.534", "scanCount": "16234", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Modification of Wallpaper", "detection_file": "modification_of_wallpaper.yml", "splunk_search": "search `sysmon` EventCode =13  (TargetObject= \"*\\\\Control Panel\\\\Desktop\\\\Wallpaper\" AND Image != \"*\\\\explorer.exe\") OR (TargetObject= \"*\\\\Control Panel\\\\Desktop\\\\Wallpaper\" AND Details = \"*\\\\temp\\\\*\") | stats count min(_time) as firstTime max(_time) as lastTime by EventCode Image TargetObject Details  Computer process_guid process_id user_id | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `modification_of_wallpaper_filter` | stats count | where count > 0", "diskUsage": "106496", "runDuration": "0.13", "scanCount": "0", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Office Application Drop Executable", "detection_file": "office_application_drop_executable.yml", "splunk_search": "| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes where Processes.process_name IN (\"winword.exe\",\"excel.exe\",\"powerpnt.exe\",\"mspub.exe\",\"visio.exe\",\"wordpad.exe\",\"wordview.exe\") by _time span=1h Processes.process_id Processes.process_name Processes.process Processes.dest Processes.process_guid | `drop_dm_object_name(Processes)` |rename process_guid as proc_guid |join proc_guid, _time [| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Filesystem where Filesystem.file_name IN (\"*.exe\",\"*.dll\",\"*.pif\",\"*.scr\",\"*.js\",\"*.vbs\",\"*.vbe\",\"*.ps1\") by _time span=1h Filesystem.dest Filesystem.file_create_time Filesystem.file_name Filesystem.process_guid Filesystem.file_path | `drop_dm_object_name(Filesystem)` | rename process_guid as proc_guid | fields _time dest file_create_time file_name file_path process_name process_path process proc_guid] | dedup file_create_time | table dest, process_name, process, file_create_time, file_name, file_path, proc_guid | `office_application_drop_executable_filter` | stats count | where count > 0", "diskUsage": "770048", "runDuration": "2.576", "scanCount": "2859", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Office Product Spawn CMD OR Powershell Process", "detection_file": "office_product_spawn_cmd_powershell_process.yml", "splunk_search": "| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.parent_process_name = \"winword.exe\" OR Processes.parent_process_name= \"excel.exe\" OR Processes.parent_process_name = \"powerpnt.exe\") AND (Processes.process_name=cmd.exe OR Processes.original_file_name=Cmd.Exe OR Processes.process_name=powershell.exe OR Processes.process_name=powershell_ise.exe OR Processes.original_file_name=PowerShell.EXE OR Processes.original_file_name=powershell_ise.EXE) by Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.process_guid Processes.user Processes.dest Processes.original_file_name | `drop_dm_object_name(\"Processes\")` | `security_content_ctime(firstTime)` |`security_content_ctime(lastTime)` | `office_product_spawn_cmd_process_filter` | stats count | where count > 0", "diskUsage": "307200", "runDuration": "1.2750000000000001", "scanCount": "2859", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Powershell Disable Security Monitoring", "detection_file": "powershell_disable_security_monitoring.yml", "splunk_search": "| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_powershell` Processes.process=\"*set-mppreference*\" AND Processes.process IN (\"*disablerealtimemonitoring*\",\"*disableioavprotection*\",\"*disableintrusionpreventionsystem*\",\"*disablescriptscanning*\",\"*disableblockatfirstseen*\",\"*DisableBehaviorMonitoring*\",\"*drtm *\",\"*dioavp *\",\"*dscrptsc *\",\"*dbaf *\",\"*dbm *\") by Processes.dest Processes.user Processes.parent_process Processes.original_file_name Processes.process_name Processes.process Processes.process_id Processes.parent_process_id | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `powershell_disable_security_monitoring_filter` | stats count | where count > 0", "diskUsage": "323584", "runDuration": "1.558", "scanCount": "2821", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Suspicious Remote Thread Created", "detection_file": "suspicous_remote_thread_created.yml", "splunk_search": "search `sysmon` EventCode=8 SourceImage IN (\"*\\\\bash.exe\", \"*\\\\cvtres.exe\", \"*\\\\defrag.exe\", \"*\\\\dnx.exe\", \"*\\\\esentutl.exe\", \"*\\\\excel.exe\", \"*\\\\expand.exe\", \"*\\\\explorer.exe\", \"*\\\\find.exe\", \"*\\\\findstr.exe\", \"*\\\\forfiles.exe\", \"*\\\\gpupdate.exe\", \"*\\\\hh.exe\", \"*\\\\iexplore.exe\", \"*\\\\installutil.exe\", \"*\\\\lync.exe\", \"*\\\\makecab.exe\", \"*\\\\mDNSResponder.exe\", \"*\\\\monitoringhost.exe\", \"*\\\\msbuild.exe\", \"*\\\\mshta.exe\", \"*\\\\msiexec.exe\", \"*\\\\mspaint.exe\", \"*\\\\outlook.exe\", \"*\\\\ping.exe\", \"*\\\\powerpnt.exe\", \"*\\\\provtool.exe\", \"*\\\\python.exe\", \"*\\\\regsvr32.exe\", \"*\\\\robocopy.exe\", \"*\\\\runonce.exe\", \"*\\\\sapcimc.exe\", \"*\\\\schtasks.exe\", \"*\\\\smartscreen.exe\", \"*\\\\spoolsv.exe\", \"*\\\\tstheme.exe\", \"*\\\\userinit.exe\", \"*\\\\vssadmin.exe\", \"*\\\\vssvc.exe\", \"*\\\\w3wp.exe\", \"*\\\\winlogon.exe\", \"*\\\\winscp.exe\", \"*\\\\wmic.exe\", \"*\\\\word.exe\", \"*\\\\wscript.exe\") AND NOT ( (SourceImage=\"C:\\\\Windows\\\\System32\\\\winlogon.exe\" AND TargetImage=\"C:\\\\Windows\\\\System32\\\\csrss.exe\") OR (SourceImage=\"C:\\\\Windows\\\\System32\\\\provtool.exe\" AND TargetProcessId=0) OR (SourceImage=\"C:\\\\Windows\\\\System32\\\\VSSVC.exe\" AND TargetImage=\"*System*\")) | stats count min(_time) as firstTime max(_time) as lastTime by Computer SourceImage SourceProcessId SourceUser TargetImage TargetProcessId TargetUser StartAddress EventCode | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | stats count | where count > 0", "diskUsage": "155648", "runDuration": "0.165", "scanCount": "40", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "PowerShell Rundll32 Remote Thread Creation", "detection_file": "suspicious_powershell_rundll32.yml", "splunk_search": "search `sysmon` EventCode=8 SourceImage IN (\"*\\\\powershell.exe\", \"*\\\\pwsh.exe\") AND TargetImage=\"*\\\\rundll32.exe\" | stats count min(_time) as firstTime max(_time) as lastTime by Computer SourceImage SourceProcessId SourceUser TargetImage TargetProcessId TargetUser StartAddress EventCode | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | stats count | where count > 0", "diskUsage": "114688", "runDuration": "0.131", "scanCount": "18", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Ransomware Notes bulk creation", "detection_file": "ransomware_notes_bulk_creation.yml", "splunk_search": "search `sysmon` EventCode=11 file_name IN (\"*\\.txt\",\"*\\.html\",\"*\\.hta\") | bin _time span=10s | stats min(_time) as firstTime max(_time) as lastTime dc(TargetFilename) as unique_readme_path_count values(TargetFilename) as list_of_readme_path by Computer Image file_name | where unique_readme_path_count >= 15 | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | search Image!=\"C:\\\\Windows\\\\SystemApps\\\\Microsoft.Windows.Cortana_*\\\\SearchUI.exe\" | `ransomware_notes_bulk_creation_filter` | stats count | where count > 0", "diskUsage": "131072", "runDuration": "4.723", "scanCount": "13557", "resultCount": "1", "messages": {"info": ["The term 'Image!=\"C:\\\\Windows\\\\SystemApps\\\\Microsoft.Windows.Cortana_*\\\\SearchUI.exe\"' contains a wildcard in the middle of a word or string. This might cause inconsistent results if the characters that the wildcard represents include punctuation."]}, "error": false}}, {"detection_result": {"detection_name": "Recursive Delete of Directory In Batch CMD", "detection_file": "recursive_delete_of_directory_in_batch_cmd.yml", "splunk_search": "| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where `process_cmd` Processes.process=*/c*  Processes.process=* rd * Processes.process=\"*/s*\" Processes.process=\"*/q*\" by Processes.user Processes.process_name Processes.parent_process_name Processes.parent_process Processes.process Processes.process_id Processes.dest |`drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `recursive_delete_of_directory_in_batch_cmd_filter` | stats count | where count > 0", "diskUsage": "249856", "runDuration": "0.329", "scanCount": "0", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Registry Keys Used For Persistence", "detection_file": "registry_keys_used_for_persistence.yml", "splunk_search": "| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where (Registry.registry_path=*\\\\currentversion\\\\run* OR Registry.registry_path=*\\\\currentVersion\\\\Windows\\\\Appinit_Dlls* OR Registry.registry_path=*\\\\CurrentVersion\\\\Winlogon\\\\Shell* OR Registry.registry_path=*\\\\CurrentVersion\\\\Winlogon\\\\Notify* OR Registry.registry_path=*\\\\CurrentVersion\\\\Winlogon\\\\Userinit* OR Registry.registry_path=*\\\\CurrentVersion\\\\Winlogon\\\\VmApplet* OR Registry.registry_path=*\\\\currentversion\\\\policies\\\\explorer\\\\run* OR Registry.registry_path=HKLM\\\\SOFTWARE\\\\Microsoft\\\\Netsh\\\\* OR (Registry.registry_path=\"*Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options*\" AND Registry.registry_key_name=Debugger) OR (Registry.registry_path=\"*\\\\CurrentControlSet\\\\Control\\\\Lsa\" AND Registry.registry_key_name=\"Security Packages\") OR (Registry.registry_path=\"*\\\\CurrentControlSet\\\\Control\\\\Lsa\\\\OSConfig\" AND Registry.registry_key_name=\"Security Packages\") OR (Registry.registry_path=\"*\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\SilentProcessExit\\\\*\") OR (Registry.registry_path=\"*currentVersion\\\\Windows\" AND Registry.registry_key_name=\"Load\") OR (Registry.registry_path=\"*\\\\CurrentVersion\" AND Registry.registry_key_name=\"Svchost\") OR (Registry.registry_path=\"*\\\\CurrentControlSet\\Control\\Session Manager\"AND Registry.registry_key_name=\"BootExecute\") OR (Registry.registry_path=\"*\\\\Software\\\\Run\" AND Registry.registry_key_name=\"auto_update\")) by Registry.dest Registry.user Registry.registry_path Registry.registry_value_name Registry.registry_value_data Registry.process_guid Registry.registry_key_name | `drop_dm_object_name(Registry)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `registry_keys_used_for_persistence_filter` | stats count | where count > 0", "diskUsage": "401408", "runDuration": "1.242", "scanCount": "2763", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Resize ShadowStorage volume", "detection_file": "resize_shadowstorage_volume.yml", "splunk_search": "| tstats `security_content_summariesonly` values(Processes.process) as cmdline values(Processes.parent_process_name) as parent_process values(Processes.process_name) as process_name min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.parent_process_name = \"cmd.exe\" OR Processes.parent_process_name = \"powershell.exe\" OR Processes.parent_process_name = \"powershell_ise.exe\" OR Processes.parent_process_name =  \"wmic.exe\" Processes.process_name = \"vssadmin.exe\" Processes.process=\"*resize*\" Processes.process=\"*shadowstorage*\" Processes.process=\"*/maxsize*\" by Processes.parent_process_name Processes.parent_process Processes.process_name Processes.process Processes.dest Processes.user Processes.process_id Processes.process_guid | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` |`security_content_ctime(lastTime)` | `resize_shadowstorage_volume_filter` | stats count | where count > 0", "diskUsage": "294912", "runDuration": "1.385", "scanCount": "2834", "resultCount": "1", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Rundll32 LockWorkstation", "detection_file": "rundll32_lockworkstation.yml", "splunk_search": "| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=rundll32.exe Processes.process= \"*user32.dll,LockWorkStation*\" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.parent_process_name | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `rundll32_lockworkstation_filter` | stats count | where count > 0", "diskUsage": "274432", "runDuration": "1.302", "scanCount": "2821", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Suspicious Scheduled Task from Public Directory", "detection_file": "suspicious_scheduled_task_from_public_directory.yml", "splunk_search": "| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=schtasks.exe (Processes.process=*\\\\users\\\\public\\\\* OR Processes.process=*\\\\programdata\\\\* OR Processes.process=*windows\\\\temp*)  Processes.process=*/create* by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`| `suspicious_scheduled_task_from_public_directory_filter` | stats count | where count > 0", "diskUsage": "286720", "runDuration": "1.42", "scanCount": "2824", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "System Processes Run From Unexpected Locations", "detection_file": "system_processes_run_from_unexpected_locations.yml", "splunk_search": "| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes where Processes.process_path !=\"C:\\\\Windows\\\\System32*\" Processes.process_path !=\"C:\\\\Windows\\\\SysWOW64*\" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id Processes.process_hash | `drop_dm_object_name(\"Processes\")` | `security_content_ctime(firstTime)`| `security_content_ctime(lastTime)`| `is_windows_system_file` | `system_processes_run_from_unexpected_locations_filter` | search NOT process=\"*\\\\TEMP\\\\*dismhost.exe*\" | stats count | where count > 0", "diskUsage": "278528", "runDuration": "1.2710000000000001", "scanCount": "15831", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Time Provider Persistence Registry", "detection_file": "time_provider_persistence_registry.yml", "splunk_search": "| tstats `security_content_summariesonly` count  min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Registry where Registry.registry_path =\"*\\\\CurrentControlSet\\\\Services\\\\W32Time\\\\TimeProviders*\" AND Registry.user!=\"LOCAL SERVICE\" by _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_value_name Registry.registry_value_data Registry.process_guid | `drop_dm_object_name(Registry)` |rename process_guid as proc_guid | join proc_guid, _time [| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes by _time span=1h Processes.process_id Processes.process_name Processes.process Processes.dest Processes.parent_process_name Processes.parent_process Processes.process_guid | `drop_dm_object_name(Processes)` |rename process_guid as proc_guid | fields _time dest user parent_process_name parent_process process_name process_path process proc_guid registry_path registry_value_name registry_value_data] | table _time dest user parent_process_name parent_process process_name process_path process proc_guid registry_path registry_value_name registry_value_data | `time_provider_persistence_registry_filter` | stats count | where count > 0", "diskUsage": "626688", "runDuration": "2.6630000000000003", "scanCount": "1", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Uninstall App Using MsiExec", "detection_file": "uninstall_app_using_msiexec.yml", "splunk_search": "| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=msiexec.exe Processes.process= \"* /qn *\" Processes.process= \"*/X*\" Processes.process= \"*REBOOT=*\" by Processes.dest Processes.user Processes.parent_process Processes.process_name Processes.process Processes.process_id Processes.parent_process_id | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `uninstall_app_using_msiexec_filter` | stats count | where count > 0", "diskUsage": "253952", "runDuration": "1.363", "scanCount": "2821", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "WBAdmin Delete System Backups", "detection_file": "wbadmin_delete_system_backups.yml", "splunk_search": "| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=wbadmin.exe Processes.process=\"*delete*\" AND (Processes.process=\"*catalog*\" OR Processes.process=\"*systemstatebackup*\") by Processes.process_name Processes.process Processes.parent_process_name Processes.dest Processes.user | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)`| `wbadmin_delete_system_backups_filter` | stats count | where count > 0", "diskUsage": "278528", "runDuration": "1.368", "scanCount": "2859", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Windows AdFind Exe", "detection_file": "windows_adfind_exe.yml", "splunk_search": "| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where (Processes.process=\"* -f *\" OR Processes.process=\"* -b *\") AND (Processes.process=*objectcategory* OR Processes.process=\"* -gcb *\" OR Processes.process=\"* -sc *\") by Processes.dest Processes.user Processes.process_name Processes.process Processes.parent_process Processes.process_id Processes.parent_process_id | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `windows_adfind_exe_filter` | stats count | where count > 0", "diskUsage": "249856", "runDuration": "1.419", "scanCount": "2821", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Windows Raccine Scheduled Task Deletion", "detection_file": "windows_raccine_scheduled_task_deletion.yml", "splunk_search": "| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime from datamodel=Endpoint.Processes where Processes.process_name=schtasks.exe Processes.process=\"*delete*\" AND Processes.process=\"*Raccine*\" by Processes.dest Processes.user Processes.parent_process_name Processes.process_name Processes.original_file_name Processes.process Processes.process_id Processes.parent_process_id | `drop_dm_object_name(Processes)` | `security_content_ctime(firstTime)` | `security_content_ctime(lastTime)` | `windows_raccine_scheduled_task_deletion_filter` | stats count | where count > 0", "diskUsage": "290816", "runDuration": "1.345", "scanCount": "2859", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Windows Registry Modification for Safe Mode Persistence", "detection_file": "windows_registry_modification_for_safe_mode_persistence.yml", "splunk_search": "| tstats `security_content_summariesonly` count from datamodel=Endpoint.Registry where Registry.registry_path IN (\"*SYSTEM\\\\CurrentControlSet\\\\Control\\\\SafeBoot\\\\Minimal\\\\*\",\"*SYSTEM\\\\CurrentControlSet\\\\Control\\\\SafeBoot\\\\Network\\\\*\") by _time span=1h Registry.dest Registry.user Registry.registry_path Registry.registry_value_name Registry.process_guid Registry.registry_key_name Registry.registry_value_data | `drop_dm_object_name(Registry)` | join process_guid _time [| tstats `security_content_summariesonly` count FROM datamodel=Endpoint.Processes by _time span=1h Processes.process_id Processes.process_name Processes.process Processes.dest Processes.process_guid | `drop_dm_object_name(Processes)`] | table _time dest user process_name process process_guid registry_path registry_value_name registry_value_data registry_key_name | `windows_registry_modification_for_safe_mode_persistence_filter` | stats count | where count > 0", "diskUsage": "610304", "runDuration": "2.586", "scanCount": "1", "resultCount": "0", "messages": {}, "error": false}}, {"detection_result": {"detection_name": "Windows Security Account Manager Stopped", "detection_file": "windows_security_account_manager_stopped.yml", "splunk_search": "| tstats `security_content_summariesonly` count min(_time) as firstTime max(_time) as lastTime FROM datamodel=Endpoint.Processes WHERE (\"Processes.process_name\"=\"net*.exe\" \"Processes.process\"=\"*stop \\\"samss\\\"*\") BY \"Processes.dest\", \"Processes.user\", \"Processes.process\" | `drop_dm_object_name(Processes)` | `security_content_ctime(lastTime)` | `security_content_ctime(firstTime)` | `windows_security_account_manager_stopped_filter` | stats count | where count > 0", "diskUsage": "245760", "runDuration": "1.28", "scanCount": "2821", "resultCount": "0", "messages": {}, "error": false}}]